{"version":3,"sources":["components/Navigation/Toolbar/NavigationItems/NavigationItems.module.css","components/Navigation/Toolbar/Toolbar.module.css","store/chartData-slice.ts","components/UI/LoadingSpinner/LoadingSpinner.tsx","hoc/Layout/Layout.module.css","components/Navigation/Logo/Logo.module.css","components/Navigation/SideDrawer/ToogleBtn/ToogleBtn.module.css","components/UI/LoadingSpinner/LoadingSpinner.module.css","store/index.ts","assets/logo_transparent.png","components/Navigation/Logo/Logo.tsx","components/Navigation/Toolbar/NavigationItems/NavigationItems.tsx","components/Navigation/SideDrawer/ToogleBtn/ToogleBtn.tsx","components/Navigation/Toolbar/Toolbar.tsx","components/Navigation/SideDrawer/SideDrawer.tsx","hoc/Layout/Layout.tsx","containers/App.tsx","reportWebVitals.ts","index.tsx","components/Navigation/SideDrawer/SideDrawer.module.css"],"names":["module","exports","chartSlice","createSlice","name","initialState","chartData","currStock","symbol","currTimeRange","range","interval","timestamps","stockPrice","isLoading","error","reducers","setChartData","state","action","payload","setCurrStock","setCurrTimeRange","setTimestamps","setStockPrice","price","setIsLoading","setError","chartActions","actions","loadingSpinner","className","classes","store","configureStore","reducer","chart","chartReducer","logo","Logo","src","stockLogo","alt","navigationItems","NavigationItems","NavigationItem","exact","activeClassName","active","to","toggleBtn","props","onClick","clicked","ToggleBtn","toolbar","Toolbar","drawerHandler","DesktopOnly","sideDrawer","attachedClasses","sidenav","Closed","open","Open","Backdrop","closed","join","link","Layout","useState","showSideDrawer","setShowSideDrawer","SideDrawer","Content","children","LandingPage","React","lazy","ChartPage","App","fallback","LoadingSpinner","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ccfd070b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1W-Hk\",\"NavigationItem\":\"NavigationItems_NavigationItem__2uO5V\",\"active\":\"NavigationItems_active__1BLop\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__kPnVs\",\"Logo\":\"Toolbar_Logo__184xA\",\"DesktopOnly\":\"Toolbar_DesktopOnly__2kruY\"};","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ninterface stateConfiguration {\r\n  chartData: { date: string; price: number }[] | [];\r\n  currStock: { name: string; symbol: string };\r\n  currTimeRange: { range: string; interval: string };\r\n  timestamps: number[][];\r\n  stockPrice: number | null;\r\n  isLoading: boolean;\r\n  error: boolean;\r\n}\r\n\r\nconst initialState: stateConfiguration = {\r\n  chartData: [],\r\n  currStock: {\r\n    name: 'Apple',\r\n    symbol: 'AAPL',\r\n  },\r\n  currTimeRange: {\r\n    range: '1m',\r\n    interval: '1d',\r\n  },\r\n  timestamps: [],\r\n  stockPrice: null,\r\n  isLoading: true,\r\n  error: false,\r\n};\r\n\r\nconst chartSlice = createSlice({\r\n  name: 'chartReducer',\r\n  initialState,\r\n  reducers: {\r\n    setChartData(\r\n      state,\r\n      action: PayloadAction<{\r\n        chartData: { date: string; price: number }[] | [];\r\n      }>\r\n    ) {\r\n      state.chartData = action.payload.chartData;\r\n    },\r\n    setCurrStock(\r\n      state,\r\n      action: PayloadAction<{ name: string; symbol: string }>\r\n    ) {\r\n      state.currStock = {\r\n        name: action.payload.name,\r\n        symbol: action.payload.symbol,\r\n      };\r\n    },\r\n    setCurrTimeRange(\r\n      state,\r\n      action: PayloadAction<{ range: string; interval: string }>\r\n    ) {\r\n      state.currTimeRange = {\r\n        range: action.payload.range,\r\n        interval: action.payload.interval,\r\n      };\r\n    },\r\n    setTimestamps(state, action: PayloadAction<{ timestamps: number[][] }>) {\r\n      state.timestamps = action.payload.timestamps;\r\n    },\r\n    setStockPrice(state, action: PayloadAction<{ price: number }>) {\r\n      state.stockPrice = action.payload.price;\r\n    },\r\n    setIsLoading(state, action: PayloadAction<{ isLoading: boolean }>) {\r\n      state.isLoading = action.payload.isLoading;\r\n    },\r\n    setError(state, action: PayloadAction<{ error: boolean }>) {\r\n      state.error = action.payload.error;\r\n    },\r\n  },\r\n});\r\n\r\nexport const chartActions = chartSlice.actions;\r\n\r\nexport default chartSlice;\r\n","import React from 'react';\r\n\r\nimport classes from './LoadingSpinner.module.css';\r\n\r\nconst loadingSpinner = () => (\r\n  <div className={classes['lds-default']}>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n  </div>\r\n);\r\n\r\nexport default loadingSpinner;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__tCEpC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1sbNb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToggleBtn\":\"ToogleBtn_ToggleBtn__1mEKM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds-default\":\"LoadingSpinner_lds-default__1MeNj\"};","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport chartReducer from './chartData-slice';\r\n\r\nconst store = configureStore({\r\n  reducer: { chart: chartReducer.reducer },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport default store;\r\n","export default __webpack_public_path__ + \"static/media/logo_transparent.3d40d372.png\";","import React from 'react';\r\n\r\nimport classes from './Logo.module.css';\r\nimport stockLogo from '../../../assets/logo_transparent.png';\r\n\r\nconst logo = () => (\r\n  <div className={classes.Logo}>\r\n    <img src={stockLogo} alt=\"Logo\" />\r\n  </div>\r\n);\r\n\r\nexport default logo;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './NavigationItems.module.css';\r\n\r\nconst navigationItems = () => (\r\n  <ul className={classes.NavigationItems}>\r\n    <li className={classes.NavigationItem}>\r\n      <NavLink\r\n        exact\r\n        activeClassName={classes.active}\r\n        to=\"/stock-market-analytics/\"\r\n      >\r\n        Home Page\r\n      </NavLink>\r\n    </li>\r\n    <li className={classes.NavigationItem}>\r\n      <NavLink\r\n        activeClassName={classes.active}\r\n        exact\r\n        to=\"/stock-market-analytics/stock-market\"\r\n      >\r\n        Stock Charts\r\n      </NavLink>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nexport default navigationItems;\r\n","import React from 'react';\r\n\r\nimport classes from './ToogleBtn.module.css';\r\n\r\ninterface propsType {\r\n  clicked(): void;\r\n}\r\n\r\nconst toggleBtn = (props: propsType) => (\r\n  <div onClick={props.clicked} className={classes.ToggleBtn}>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n  </div>\r\n);\r\n\r\nexport default toggleBtn;\r\n","import React from 'react';\r\n\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../Logo/Logo';\r\nimport NavigationItems from './NavigationItems/NavigationItems';\r\nimport ToggleBtn from '../SideDrawer/ToogleBtn/ToogleBtn';\r\n\r\ninterface propsType {\r\n  drawerHandler(): void;\r\n}\r\n\r\nconst toolbar = (props: propsType) => (\r\n  <header className={classes.Toolbar}>\r\n    <ToggleBtn clicked={props.drawerHandler} />\r\n    <div className={classes.Logo}>\r\n      <Logo />\r\n    </div>\r\n    <nav className={classes.DesktopOnly}>\r\n      <NavigationItems />\r\n    </nav>\r\n  </header>\r\n);\r\n\r\nexport default toolbar;\r\n","import React from 'react';\r\n\r\nimport classes from './SideDrawer.module.css';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ninterface propsType {\r\n  open: boolean;\r\n  closed(): void;\r\n}\r\n\r\nconst sideDrawer = (props: propsType) => {\r\n  let attachedClasses = [classes.sidenav, classes.Closed];\r\n\r\n  if (props.open) {\r\n    attachedClasses = [classes.sidenav, classes.Open];\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {props.open ? (\r\n        <div className={classes.Backdrop} onClick={props.closed}></div>\r\n      ) : null}\r\n      <div className={attachedClasses.join(' ')} onClick={props.closed}>\r\n        <NavLink\r\n          exact\r\n          to=\"/stock-market-analytics/\"\r\n          activeClassName={classes.active}\r\n          className={classes.link}\r\n        >\r\n          HOME PAGE\r\n        </NavLink>\r\n        <NavLink\r\n          exact\r\n          to=\"/stock-market-analytics/stock-market\"\r\n          activeClassName={classes.active}\r\n          className={classes.link}\r\n        >\r\n          STOCK CHARTS\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default sideDrawer;\r\n","import React, { useState } from 'react';\r\n\r\nimport classes from './Layout.module.css';\r\n\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\ninterface propsType {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst Layout = (props: propsType) => {\r\n  const [showSideDrawer, setShowSideDrawer] = useState(false);\r\n\r\n  const sideDrawerClosedHandler = () => {\r\n    setShowSideDrawer(false);\r\n  };\r\n\r\n  const sideDrawerToggleHandler = () => {\r\n    setShowSideDrawer(!showSideDrawer);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar drawerHandler={sideDrawerToggleHandler} />\r\n      <SideDrawer open={showSideDrawer} closed={sideDrawerClosedHandler} />\r\n      <main className={classes.Content}>{props.children}</main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { Suspense } from 'react';\n\nimport { Switch, Route } from 'react-router-dom';\n\nimport Layout from '../hoc/Layout/Layout';\nimport LoadingSpinner from '../components/UI/LoadingSpinner/LoadingSpinner';\n\nconst LandingPage = React.lazy(\n  () => import('../components/LandingPage/LandingPage')\n);\nconst ChartPage = React.lazy(() => import('../components/ChartPage/ChartPage'));\n\nfunction App() {\n  return (\n    <Layout>\n      <Suspense\n        fallback={\n          <div className=\"centered\">\n            <LoadingSpinner />\n          </div>\n        }\n      >\n        <Switch>\n          <Route\n            path=\"/stock-market-analytics/stock-market\"\n            component={ChartPage}\n          />\n          <Route path=\"/stock-market-analytics\" component={LandingPage} />\n        </Switch>\n      </Suspense>\n    </Layout>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\n\nimport store from './store/index';\n\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidenav\":\"SideDrawer_sidenav__2TH1u\",\"link\":\"SideDrawer_link__2vNKb\",\"active\":\"SideDrawer_active__wW8pC\",\"closebtn\":\"SideDrawer_closebtn__1Km2f\",\"Open\":\"SideDrawer_Open__3R0oq\",\"Closed\":\"SideDrawer_Closed__g6H2d\",\"Logo\":\"SideDrawer_Logo__l4fi2\",\"Backdrop\":\"SideDrawer_Backdrop__3Lm0a\"};"],"sourceRoot":""}